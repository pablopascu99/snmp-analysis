version: '3'
services:
  agent:
    network_mode: "host"
    build:
      context: .
      dockerfile: /agent/Dockerfile
    depends_on:
      - producer
  zookeeper:
    image: zookeeper
    hostname: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
    networks:
      - broker-kafka
  kafka1:
    image: confluentinc/cp-kafka:5.3.0
    hostname: kafka1
    ports:
      - "9091:9091"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1:19091,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9091
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_NUM_PARTITIONS: 3
    depends_on:
      - zookeeper
    networks:
      - broker-kafka
  kafka2:
    image: confluentinc/cp-kafka:5.3.0
    hostname: kafka2
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka2:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_BROKER_ID: 2
      KAFKA_NUM_PARTITIONS: 3
    depends_on:
      - zookeeper
    networks:
      - broker-kafka
  kafka3:
    image: confluentinc/cp-kafka:5.3.0
    hostname: kafka3
    ports:
      - "9093:9093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka3:19093,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 3
      KAFKA_NUM_PARTITIONS: 3
    depends_on:
      - zookeeper
    networks:
      - broker-kafka
  kafdrop:
    image: obsidiandynamics/kafdrop
    restart: "no"
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka1:19091"
    depends_on:
      - kafka1
      - kafka2
      - kafka3
    networks:
      - broker-kafka
  producer:
    build:
      context: .
      dockerfile: producer/Dockerfile
    environment:
      - KAFKA_TOPIC_NAME=snmptrap-tracker
      - KAFKA_SERVER=kafka
      - KAFKA_PORT=19091
    ports:
      - "162:162/udp"
    depends_on:
      - kafdrop
    networks:
      - broker-kafka
  consumer:
    build:
      context: .
      dockerfile: consumer/Dockerfile
    environment:
      - KAFKA_TOPIC_NAME=snmptrap-tracker
      - KAFKA_SERVER=kafka
      - KAFKA_PORT=19091
    depends_on:
      - producer
    networks:
      - broker-kafka
  postgres:
    image: postgres
    restart: always
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5432:5432'
    # volumes: 
      # - ./postgres-data:/var/lib/postgresql/data
    networks:
      - broker-kafka
  # grafana:
  #   image: grafana/grafana
  #   ports:
  #     - 3000:3000
  #   networks:
  #     - broker-kafka
networks:
  broker-kafka:
    driver: bridge